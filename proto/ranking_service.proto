syntax = "proto3";
package okoranking;
option java_multiple_files = true;
option java_package = "net.okocraft.okoranking.protocol";

// ランキングのサービス。すべての呼び出しに対し、一致または影響を受けたスコアを返す。
service RankingService {
  // ランキングを取得する
  rpc GetRanking (RankingRequest) returns (RankingResponse) {}
  // 存在するランキングをすべて取得する
  rpc GetRankingSet (GetRankingSetRequest) returns (stream RankingResponse) {}
  // ランキングを作成する
  rpc CreateRanking (RankingRequest) returns (RankingResponse) {}
  // ランキングを削除する
  rpc DeleteRanking (RankingRequest) returns (RankingResponse) {}
  // ランキングを改名する
  rpc RenameRanking (RenameRankingRequest) returns (RankingResponse) {}
}

// ランキングを取得するリクエスト
message RankingRequest {
  sint64 service_uuid_most = 1; // リクエスト側の uuid (most)
  sint64 service_uuid_least = 2; // リクエスト側の uuid (least)
  string ranking_name = 3; // ランキングの名前
}

// 存在するランキングをすべて取得するリクエスト
message GetRankingSetRequest {
  sint64 service_uuid_most = 1; // リクエスト側の uuid (most)
  sint64 service_uuid_least = 2; // リクエスト側の uuid (least)
}

// ランキングを改名するリクエスト
message RenameRankingRequest {
  sint64 service_uuid_most = 1; // リクエスト側の uuid (most)
  sint64 service_uuid_least = 2; // リクエスト側の uuid (least)
  string ranking_name = 3; // ランキングの名前
  string new_ranking_name = 4; // ランキングの新しい名前
}

// ランキングのレスポンス
message RankingResponse {
  string ranking_name = 1; // ランキングの名前
  int32 entries = 2; // ランキングに含まれるスコア数
  int32 modified_entries = 3; // 影響を受けたエントリー数
}
